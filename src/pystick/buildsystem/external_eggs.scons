import os
from freezer import freeze_dir, no_freeze_conflict_if_equal

Import("env")

freeze_conflict_whitelist = ['zc']
# FIXME here's where it gets tricky:
exclude_list = [r'IPython/config/tests', r'IPython/core/tests', r'infi/wmi', r'setuptools/script template']

def no_freeze_conflict_if_equal_or_whitelist(full_module_name, path_a, path_b):
    if full_module_name in freeze_conflict_whitelist:
        return False
    return no_freeze_conflict_if_equal(full_module_name, path_a, path_b)

freeze_modules = []
frozen_modules = dict()
packages_dir = env.Dir('#.').Dir("..").Dir("packages").abspath
print("considering egg directory: {}".format(packages_dir))
for egg_dir in os.listdir(packages_dir):
    full_path = os.path.join(packages_dir, egg_dir)
    print("considering {} for egg".format(full_path))
    if egg_dir.endswith(".egg") and os.path.isdir(full_path):
        freeze_modules.extend(freeze_dir(env, Dir('freezer'), full_path,
                                         exclude_list=exclude_list,
                                         frozen_modules=frozen_modules,
                                         conflict_resolver=no_freeze_conflict_if_equal_or_whitelist))
Return("freeze_modules")